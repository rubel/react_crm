import axios from "axios";
import { Field, Form, Formik } from "formik";
import { default as React } from "react";
import { BsFillPersonPlusFill } from "react-icons/bs";
import "../App.css";
import CustomEditIcon from "../Components/CustomEditIcon";
import Tabs from "../MainApp/Tabs";
import TopBar from "../MainApp/TopBar";

export default class Users extends React.Component {
  constructor(props) {
    super(props);
    this.getAllUserTypes = this.getAllUserTypes.bind(this);
    this.editNavPressed = this.editNavPressed.bind(this);

    this.state = {
      allUsers: [],
      addUserFormVisible: false,
      allPermissions: [],
      selectedUser: {},
      selectedUserId: -100,
    };
  }

  componentDidMount() {
    this.getAllUsers();
    let permData = JSON.parse(sessionStorage.getItem("ALL_PERMISSIONS"));
    this.setState({ allPermissions: permData });
  }

  getAllUserTypes() {
    return ["Admin", "Agent", "Deliverer", "Delivery Manager"];
  }
  deleteNavPressed(id) {
    console.log("going to delete user with id " + id);
    this.setState({ selectedUserId: id });
  }
  editNavPressed(id) {
    console.log("going to edit user with id " + id);
    let userDetails = this.getUserDetailsForId(id);
    this.setState({ selectedUserId: id, selectedUser: userDetails });
    this.setState({ addUserFormVisible: true });
  }

  getUserDetailsForId(id) {
    for (let index = 0; index < this.state.allUsers.length; index++) {
      if (this.state.allUsers[index].id == id) {
        return this.state.allUsers[index];
      }
    }
    return {};
  }
  getAllUsers = async () => {
    try {
      const res = await axios.post("http://localhost:80/crm/service.php", {
        func: "getAllUsers",
      });
      if (res.data) {
        let resData = JSON.parse(JSON.stringify(res.data));
        this.setState({ allUsers: resData });
      }
    } catch (error) {
      console.log(error);
    }
  };

  getInitialValuesForUser() {
    console.log("get initial...");
    let details;
    if (this.state.selectedUserId >= 0) {
      console.log("setting new values....");
      details = {
        title: this.state.selectedUser.title,
        firstName: this.state.selectedUser.firstname,
        lastName: this.state.selectedUser.lastname,
        userid: this.state.selectedUser.id,
        email: this.state.selectedUser.email,
        phone: this.state.selectedUser.phone,
        password: "",
        confirmPassword: "",
        userType: this.state.selectedUser.type,
        perms: [],
      };
    } else {
      details = {
        title: "Mr.",
        firstName: "",
        lastName: "",
        userid: "",
        email: "",
        phone: "",
        password: "",
        confirmPassword: "",
        userType: "",
        perms: [],
      };
    }
    this.setState({ selectedUser: details });
  }
  submitForm = async (formData) => {
    console.log(formData);
    console.log(JSON.stringify(formData));
    try {
      const res = await axios.post("http://localhost:80/crm/service.php", {
        func: "registerUser",
        formData: JSON.stringify(formData),
      });

      console.log(res);
      if (res.data.includes("success")) {
        this.setState({ addUserFormVisible: false });
        this.getAllUsers();
      }
    } catch (error) {
      console.log(error);
    }
  };

  render() {
    let initialValues = this.getInitialValuesForUser();
    return (
      <div>
        <TopBar toggle={this.props.toggle} />
        <Tabs />
        <div className="container-fluid">
          <div
            className="fullShadow"
            style={this.state.addUserFormVisible ? { display: "block" } : { display: "none" }}>
            <div className="addUserFormBg">
              <Formik
                enableReinitialize
                initialValues={initialValues}
                onSubmit={(values) => {
                  this.submitForm(values);
                }}>
                <Form>
                  <div style={{ width: "100%", height: "570px" }}>
                    <div className="add-user-form">
                      <div className="details-legend2">
                        <p style={{ padding: "5px 12px 0px 0px" }}>User Details</p>
                      </div>
                      {/*................title......................*/}
                      <div className="form-outline">
                        <label className="form-custom-label">Title: </label>
                        <Field as="select" name="title" className="select form-control-lg" style={{ width: "100%" }}>
                          <option value="mr.">Mr.</option>
                          <option value="mrs.">Mrs.</option>
                        </Field>
                      </div>

                      <div className="form-outline">
                        <label className="form-custom-label">First Name</label>
                        <Field
                          type="text"
                          name="firstName"
                          placeholder="First Name"
                          className="form-control form-control-lg"
                        />
                      </div>

                      <div className="form-outline">
                        <label className="form-custom-label">Last Name</label>
                        <Field
                          type="text"
                          name="lastName"
                          placeholder="Last Name"
                          className="form-control form-control-lg"
                        />
                      </div>

                      <div className="form-outline">
                        <label className="form-custom-label">User id</label>
                        <Field
                          type="text"
                          name="userid"
                          placeholder="User Id"
                          className="form-control form-control-lg"
                        />
                      </div>
                      <div className="form-outline">
                        <label className="form-custom-label">Phone</label>
                        <Field
                          type="text"
                          name="phone"
                          placeholder="User Id"
                          className="form-control form-control-lg"
                        />
                      </div>

                      <div className="form-outline">
                        <label className="form-custom-label">User Type: </label>
                        <Field as="select" name="userType" className="select form-control-lg" style={{ width: "100%" }}>
                          {this.getAllUserTypes() &&
                            this.getAllUserTypes().map((ut, index) => (
                              <option key={index} value={ut}>
                                {ut}
                              </option>
                            ))}
                        </Field>
                      </div>

                      <div className="form-outline">
                        <label className="form-custom-label">e-mail</label>
                        <Field type="text" name="email" placeholder="email" className="form-control form-control-lg" />
                      </div>

                      <div className="form-outline">
                        <label className="form-custom-label">Password</label>
                        <Field
                          type="password"
                          name="password"
                          placeholder=""
                          className="form-control form-control-lg"
                        />
                      </div>

                      <div className="form-outline">
                        <label className="form-custom-label">Confirm Password</label>
                        <Field
                          type="password"
                          name="confirmPassword"
                          placeholder=""
                          className="form-control form-control-lg"
                        />
                      </div>
                    </div>

                    {/*..........permissions.....here................*/}
                    <div className="add-user-perm">
                      <div className="permission-legend2">
                        <p style={{ padding: "5px 12px 0px 0px" }}>Permissions</p>
                      </div>

                      <div>
                        {this.state.allPermissions &&
                          this.state.allPermissions.map((perm, index) => (
                            <div className="permission-checkbox" key={index}>
                              <Field type="checkbox" value={perm.id} name="perms" />
                              <label className="form-custom-label" style={{ fontSize: "16px", paddingLeft: "5px" }}>
                                {perm.details}
                              </label>
                            </div>
                          ))}
                      </div>
                      <div style={{ width: "100%", float: "right", marginTop: "27px" }}>
                        <button
                          style={{ width: "47%", float: "left" }}
                          className="btn btn-secondary btn-lg"
                          type="button"
                          onClick={() => {
                            this.setState({ addUserFormVisible: false });
                          }}>
                          Cancel
                        </button>
                        <button
                          style={{ width: "47%", float: "right" }}
                          className="btn btn-primary btn-lg"
                          type="submit">
                          Submit
                        </button>
                      </div>
                    </div>
                  </div>
                </Form>
              </Formik>
            </div>
          </div>
          <table className="table table-striped">
            <thead className="thead-dark">
              <tr>
                <th scope="col">User Id</th>
                <th scope="col">Type</th>
                <th scope="col">Country</th>
                <th scope="col">email</th>

                <th scope="col" style={{ textAlign: "right" }}>
                  <button
                    type="button"
                    className="btn btn-primary"
                    style={{ padding: "7px 9px" }}
                    onClick={() => {
                      this.setState({ addUserFormVisible: true });
                    }}>
                    <BsFillPersonPlusFill /> Add User
                  </button>
                </th>
              </tr>
            </thead>

            <tbody>
              {this.state.allUsers &&
                this.state.allUsers.map((user, index) => (
                  <tr key={index}>
                    <td>{user.userid}</td>
                    <td>{user.type}</td>
                    <td>{user.permitted_country}</td>
                    <td>{user.email}</td>
                    <td style={{ width: "13%" }}>
                      <CustomEditIcon
                        id={user.id}
                        deletePressedFunc={this.deleteNavPressed}
                        editPressedFunc={this.editNavPressed}
                      />
                    </td>
                  </tr>
                ))}
            </tbody>
          </table>
        </div>
      </div>
    );
  }
}
